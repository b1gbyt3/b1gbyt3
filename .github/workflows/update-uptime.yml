name: Update Uptime in README

on:
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch:

jobs:
  update_readme:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: python -m pip install python-dateutil==2.8.2

      - name: Calculate Uptime and Update README
        env:
          START_TIME_SECRET: ${{ secrets.SYSTEM_START_TIME }}
        run: |
          echo "Starting uptime calculation..."

          UPTIME_STRING=$(python - <<EOF
          import os
          import sys
          from datetime import date
          from dateutil.relativedelta import relativedelta
          
          start_time_str = os.environ.get('START_TIME_SECRET')
          
          if not start_time_str:
              print("ERROR: SYSTEM_START_TIME is not set or is empty.", file=sys.stderr)
              sys.exit(1)
          
          try:
              start_date = date.fromisoformat(start_time_str)
          except ValueError:
              print("ERROR: SYSTEM_START_TIME is not a valid YYYY-MM-DD date.", file=sys.stderr)
              sys.exit(1)
          
          current_date = date.today()
          delta = relativedelta(current_date, start_date)
          
          years = max(0, delta.years)
          months = max(0, delta.months)
          days = max(0, delta.days)
          
          uptime_parts = []
          if years:
              uptime_parts.append(f"{years} year{'s' if years != 1 else ''}")
          if months:
              uptime_parts.append(f"{months} month{'s' if months != 1 else ''}")
          if days or not uptime_parts:
              uptime_parts.append(f"{days} day{'s' if days != 1 else ''}")
          EOF
          )

          PYTHON_EXIT_CODE=$?
          if [ $PYTHON_EXIT_CODE -ne 0 ]; then
            echo "Python script failed with exit code $PYTHON_EXIT_CODE."
            exit $PYTHON_EXIT_CODE
          fi

          echo "Calculated Uptime: $UPTIME_STRING"

          sed -i '' -e "s#^\(\*\*Uptime:\*\*\s*\).*#\1$UPTIME_STRING <br>#" README.md
          SED_EXIT_CODE=$?
          if [ $SED_EXIT_CODE -ne 0 ]; then
            echo "sed command failed with exit code $SED_EXIT_CODE."
            mv README.md.bak README.md
            exit $SED_EXIT_CODE
          fi

          echo "README.md updated successfully."

      - name: Commit and Push Changes
        run: |
          git add README.md
          git config --local user.email "github-actions-bot@b1gbyt3.github.io"
          git config --local user.name "b1gbyt3/GitHub-Actions-Bot"

          if git diff --staged --quiet; then
            echo "No changes to commit."
          else
            git commit -m "Update uptime in README"
            git push
            echo "Changes committed and pushed successfully."
          fi
